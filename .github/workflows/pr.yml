name: CI

on: [pull_request, push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Project
      uses: actions/checkout@v1
    - name: Get KinD (Kubernetes in Docker)
      uses: engineerd/setup-kind@v0.1.0
      with:
        version: v0.6.1
        skipClusterCreation: "true"
    - name: Start KinD Cluster with Internal Registry
      run: |
        CLUSTER_NAME="kind"
        REGISTRY_CONTAINER_NAME='kind-registry'
        REGISTRY_PORT='5000'
        docker run -d -p "${REGISTRY_PORT}:5000" --restart=always --name "${REGISTRY_CONTAINER_NAME}" registry:2
        cat <<EOF | kind create cluster --config=-
        kind: Cluster
        apiVersion: kind.x-k8s.io/v1alpha4
        containerdConfigPatches: 
        - |-
          [plugins."io.containerd.grpc.v1.cri".registry.mirrors."registry:${REGISTRY_PORT}"]
            endpoint = ["http://registry:${REGISTRY_PORT}"]
        EOF
        for node in $(kind get nodes --name ${CLUSTER_NAME}); do
          docker exec "${node}" sh -c "echo $(docker inspect --format '{{.NetworkSettings.IPAddress }}' "${REGISTRY_CONTAINER_NAME}") registry >> /etc/hosts"
        done
    - name: Get Camel K CLI
      run: |
        CAMEL_K_VERSION=1.0.0-M4
        mkdir tmp && cd tmp
        curl -L --silent https://github.com/apache/camel-k/releases/download/${CAMEL_K_VERSION}/camel-k-client-${CAMEL_K_VERSION}-linux-64bit.tar.gz -o camel-k-client-${CAMEL_K_VERSION}-linux-64bit.tar.gz
        tar xzf camel-k-client-${CAMEL_K_VERSION}-linux-64bit.tar.gz
        sudo mv kamel /usr/bin/
        cd ..
        rm -rf tmp
    - name: Install Camel K
      run: kamel install --registry=registry:5000 --registry-insecure
    - name: Check installation
      run: |
        sleep 15
        kubectl get pod
        sleep 60
        kubectl get pod
        sleep 60
        kubectl get pod
